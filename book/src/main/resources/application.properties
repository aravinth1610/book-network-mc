spring.application.name=book
 
server.port=0
 
server.servlet.context-path= /book
 
eureka.instance.appname=book
eureka.client.serviceUrl.defaultZone=http://ADMIN:password@localhost:9000/eureka/
 
#LOGGING PATTERN
logging.pattern.console=%d{yyyy/MM/dd hh:mm:ss.SSSXXX a} %clr(%-5level) %magenta([PID] ID: ${PID: }) [${spring.application.name:unknown}] [%thread] [traceId=%X{traceId}, spanId=%X{spanId}] %cyan(%logger{46}) : %msg%n
 
# LOGGIN LEVELS
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.com.booknetwork=DEBUG

#management.endpoints.web.exposure.include=prometheus,health,info
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true

## circuitbreaker & Resilience4j
management.health.circuitbreakers.enabled=true
#To show the all Level of circuitbreaker
resilience4j.circuitbreaker.instances.bookInv.register-health-indicator=true 
#To show the buffer size for the Events
resilience4j.circuitbreaker.instances.bookInv.event-consumer-buffer-size=10
#Based on Count Based it need to set the Levels
resilience4j.circuitbreaker.instances.bookInv.sliding-window-type=COUNT_BASED
#After the 5 faild request it change the levels
resilience4j.circuitbreaker.instances.bookInv.sliding-window-size=5
# When 50 per of the calls or Faild Levels changes 
resilience4j.circuitbreaker.instances.bookInv.failure-rate-threshold=50
# wait for the Levls , It wait for 5s and then it changes to the Leve -> close -> Half Open -> Open
resilience4j.circuitbreaker.instances.bookInv.wait-duration-in-open-state=5s
# In half Open state only 3 call can be allowed and it will go to Open state
resilience4j.circuitbreaker.instances.bookInv.permitted-number-of-calls-in-half-open-state=3
# Enabling Open to Half Open
resilience4j.circuitbreaker.instances.bookInv.automatic-transition-from-open-to-half-open-enabled=true

# TimeOut only certain time need to hit this call
#resilience4j.timelimiter.instances.bookInv.timeout-duration=3s

# max attempts to retry
#resilience4j.retry.instances.bookInv.max-attempts=3

# wait to retry for the instances
#resilience4j.retry.instances.bookInv.wait-duration=5s