version: '3.8'

services:

  # mariadb SQL
  mariadb:
    image: mariadb
    container_name: bookmariadb
    restart: unless-stopped
    ports:
      - "3036:3306"
    environment:
      MARIADB_ROOT_PASSWORD: "12345#@"
      MARIADB_DATABASE: book-network
      MARIADB_USER: root
      MARIADB_PASSWORD: "12345678#@"
    volumes:
      - ./book-mariadb:/var/lib/mysql
    networks:
      - app_network

# keycloak sql
# keycloak-sql:
#   image: mariadb
#   container_name: keycloak-sql
#   restart: unless-stopped
#   ports:
#     - "3306:3306"
#   environment:
#     - MARIADB_ROOT_PASSWORD: 12345#@ 
#     - MARIADB_DATABASE: keycloak-network
#     - MARIADB_USER: root
#     - MARIADB_PASSWORD: 12345678#@
#   volumes:
#     - ./book-mariadb:/var/lib/mysql
#   networks:
#     - app_network      

  # keycloak server
  keycloak:
    container_name: keycloak-security
    image: quay.io/keycloak/keycloak:25.0.5
    ports:
      - "8080:8080"
    environment:
      DB_VENDOR: mariadb
      DB_ADDR: book-mariadb
      DB_DATABASE: keycloak
      DB_USER: root
      DB_PASSWORD: "12345678#@"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev --import-realm
    volumes:
      - ./keycloak/realm/:/opt/keycloak/data/import
    depends_on:
      - mariadb
    networks:
      - app_network

  # Discovery-server  
  discovery-server:
    image: aravinth1610/book-network-registry:0.0.1
    container_name: book-network-registry
    restart: unless-stopped
    ports: 
      - "9000:9000"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - app_network

  # api-gateway 
  api-gateway:
    image: aravinth1610/book_network_gateway:0.0.1
    container_name: book_network_gateway
    restart: unless-stopped
    ports: 
      - "8181:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: TRACE
    depends_on:    
      - discovery-server
      - keycloak
    networks:
      - app_network

  # E-security 
  e-security:
    image: aravinth1610/esecurity:0.0.1
    container_name: esecurity
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: TRACE
    depends_on:    
      - discovery-server
      - keycloak
      - api-gateway
      - mariadb
    networks:
      - app_network

  # book-services
  book-services:
    image: aravinth1610/book-network:0.0.1
    container_name: book-network
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:    
      - discovery-server
      - keycloak
      - api-gateway
      - mariadb
      - e-security
    networks:
      - app_network

  # book-inventory-services
  book-inventory-services:
    image: aravinth1610/book-inventory:0.0.1
    container_name: book-inventory
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:    
      - discovery-server
      - keycloak
      - api-gateway
      - mariadb
      - e-security
    networks:
      - app_network

  # Prometheus Service
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9181:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:    
      - discovery-server
      - api-gateway
      - e-security
    networks:
      - app_network

  # Tempo Service
  tempo:
    image: grafana/tempo
    container_name: tempo
    command: "-config.file=/etc/tempo.yaml"
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - "3200:3200"
      - "9411:9411"
    networks:
      - app_network

  # Loki Service
  loki:
    image: grafana/loki:main
    container_name: loki
    command: ["-config.file=/etc/loki/local-config.yaml"]
    ports:
      - "3100:3100"
    volumes:
      - ./docker/loki/local-config.yaml:/etc/loki/local-config.yaml  
    networks:
      - app_network

  # Grafana Service
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
